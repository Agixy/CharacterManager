@{
    IDictionary<int, string> characters = ViewData["Characters"] as Dictionary<int, string>;
    int characterId = (int)ViewData["CharacterId"];
}

<input type="button" class="btn-add-relationship blue-btn" value="Dodaj relacje" id="addRelationshipBtn" />

<div id="addModal" class="modal">
    <div class="modal-content-a" width="70%">
        <div class="add-parent-modal-header">
            <text>Dodaj rodzica</text>
            <span id="close-add-relation"class="close">&times;</span>
        </div>
        <div class="modal-body">
            @{
                var selectItemList = new List<SelectListItem>();

                foreach (var character in characters)
                {
                    selectItemList.Add(new SelectListItem() { Text = character.Value, Value = character.Key.ToString() });
                }
            }

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="Characters">Postacie</label>
                    @*<select class="custom-select d-block w-100" asp-items="@selectItemList" id="Characters">
            <option value="">Wybierz lub wpisz</option>
        </select>*@

                    <input type="text" class="form-control" list="charactersList" id="Characters" />


                    <datalist id="charactersList" ">
                    </datalist>

                 

                </div>
                
                <div class="col-md-6 mb-3">
                    <label for="Spieces">Relacja</label>
                    <input type="text" class="form-control" id="Relationship">                  
                </div>
            </div>
           
            <input type="button" class="add-parent-button"  onclick="ReloadRelationships(@ViewData["CharacterId"], $('#Characters').val(), $('#Relationship').val())"  value="Dodaj"/>
        </div>
    </div>
</div>

