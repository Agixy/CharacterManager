@model List<CharacterViewModel>

@{
    ViewData["Title"] = "Home Page";
    IDictionary<int, string> breeds = ViewData["Breeds"] as Dictionary<int, string>;
}


<main role="main" class="main-position">
    <div class="characters-album-header text-center pb-4">
        <div class="container">
            <h1>Uniwersum Wordenii</h1>
            <p class="lead text-muted">Biblioteka postaci ze wszystkich książek z uniwersum Wordenii.</p>
            <p>
            </p>
        </div>
    </div>

    <div class="row">
        @{
            var selectItemList = new List<SelectListItem>();

            foreach (var breed in breeds)   /*Note: The cast to (Suit[]) is not strictly necessary, but it does make the code 0.5 ns faster.*/
            {
                selectItemList.Add(new SelectListItem() { Text = breed.Value, Value = breed.Key.ToString() });
            }
        }

        <div class="col-md-4 mb-3 col">
            <label class="filtering-label" for="Breed">Rasa</label>
            <select class="custom-select d-block w-100" asp-items="@selectItemList" id="Breed" required>
                <option value="">Wybierz...</option>
            </select>
        </div>


        <div class="col-md-4 mb-3">
            <label class="filtering-label" for="Other">Inne wyszukiwanie</label>
            <select class="custom-select d-block w-100" asp-items="@selectItemList" id="Other" required>
                <option value="">Wybierz...</option>
            </select>
        </div>

        <div class="col-md-2 mb-3">
            <button class="btn-filter force-to-bottom-left blue-btn" id="Filter">Filtruj </button>
        </div>

        <div class="col-md-2 mb-3">
            <button onClick="location.href='@Url.Action("CreateNewCharacter", "Home")'" class="btn-add-character force-to-bottom-left blue-btn" value="Save">Dodaj postać</button>
        </div>
    </div>

    <div class="album py-5">
        <div class="container ">
            <div class="row">
                @{
                    foreach (var character in Model)
                    {
                        <div class="col-md-4">
                            <div class="card mb-4 shadow-sm">
                                <div class="text-center mt-3">                                    
                                     <img src="@Url.Content(character.Images.FirstOrDefault(i => i.IsAvatar)?.ImageData)" height="290" width="290">
                                </div>
                                <div class="card-body">
                                    <p class="card-text">
                                        @character.DisplayName
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="btn-group no-transbox">
                                            <button type="button" onClick="location.href='@Url.Action("CharacterView", "Home", new { characterId = character.Id })'" class="btn btn-sm btn-outline-secondary">Edytuj</button>
                                            <button onClick="location.href='@Url.Action("DeleteCharacter", "Home", new { characterId = character.Id })'" class="btn btn-sm btn-outline-secondary">Usuń</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</main>

<footer class="text-muted">
    <div class="container">
        <p class="float-right">
            <a href="#">Powrót na górę</a>
        </p>
        </div>
</footer>

